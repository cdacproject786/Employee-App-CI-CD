# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Employee-App CI/CD

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 20
        uses: actions/setup-java@v1
        with:
          java-version: '20'
          distribution: 'adopt'
          cache: maven
      - name: Build with Maven
        run: mvn clean install -DskipTests

      - name: Build & push Docker image
        uses: mr-smithers-excellent/docker-build-push@v5
        with:
          image: arbaaz1602/employeeapp
          tags: latest
          registry: docker.io
          dockerfile: Dockerfile
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Checkout the file
        uses: actions/checkout@v2
      - name: Docker Pull and run from DockerHub
        uses: easingthemes/ssh-deploy@main
        env:
          SSH_PRIVATE_KEY: ${{ secrets.ACTION_PRIVATE_KEY }}
          REMOTE_HOST: ec2-3-208-16-71.compute-1.amazonaws.com
          REMOTE_USER: ec2-user
          TARGET: ${{ secrets.TARGET_DIR }}
        with:
          ## host: ec2-3-208-16-71.compute-1.amazonaws.com
          ## username: ec2-user
          ## key: ${{ secrets.ACTION_PRIVATE_KEY }}
          script:
            docker stop employee-app
            docker rm -f employee-app
            docker pull arbaaz1602/employeeapp:latest
            docker run --name employee-app -p 9001:9001 -e DB=postgresdb --network employeenet -d arbaaz1602/employeeapp:latest


