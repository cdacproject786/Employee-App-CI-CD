# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Employee-App CI/CD

on:
  push:
    branches: [ master ]


jobs:
  build:

    runs-on: self-hosted

    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 20
        uses: actions/setup-java@v1
        with:
          java-version: '20'
          distribution: 'adopt'
          cache: maven
      - name: Build with Maven
        run: mvn clean install -DskipTests

      - name: Build & push Docker image
        uses: mr-smithers-excellent/docker-build-push@v5
        with:
          image: arbaaz1602/employeeapp
          tags: latest
          registry: docker.io
          dockerfile: Dockerfile
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Deploy to AWS EC2 server
        run: docker pull ${{secrets.DOCKER_REPOSITORY_IMAGE}}  & docker stop ${{secrets.DOCKER_CONTAINER_NAME}} & docker rm -f ${{secrets.DOCKER_CONTAINER_NAME}} & docker rmi -f ${{secrets.DOCKER_REPOSITORY_IMAGE}} & docker run --detach --name ${{secrets.DOCKER_CONTAINER_NAME}} -p 8080:8080 -d ${{secrets.DOCKER_REPOSITORY_IMAGE}} &


        # uses: appleboy/ssh-action@master
        # with:
         # host:
         # username: ec2-user
         # key: ${{secrets.ACTION_PRIVATE_KEY}}
         # envs: GITHUB_SHA
         # scripts: |
            




        



